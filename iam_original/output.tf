/*
  output.tf
*/

/*
  Outputs the values of the provided arguments
  below.
*/

/*
  Outputs Usernames from the "users"
  list in "iam_users.tfvars" as well
  as the ARN generated from creating
  the new user account.
*/
output "user_name" {
  value = aws_iam_user.user
}

/*
  Outputs the key generated by PGP for encryption on 
  the new user creation
*/
output "fingerprint" {
  value = aws_iam_user_login_profile.user_profile[*]
}

/*
  Outputs the Access Key and Password for
  the user accounts with the sensitive tag to prevent
  revealing the details in the tfstate file
*/

output "credentials" {
  value = {
    "key"      = aws_iam_access_key.user_key[*]
    "password" = data.pgp_decrypt.user_password_decrypt[*]
  }
  sensitive = true
}

/*
  Outputs the Identity of the user calling the Terraform HCL
  Scripts.

output "requesting_user" {
  value = data.aws_caller_identity.current
}
*/

/*
  Outputs the name of the newly created IAM Role

output "iam_role" {
  value = aws_iam_role.iam_role
}
*/

/*
  Outputs the name of the newly created IAM Policy

output "iam_policy" {
  value = aws_iam_policy.iam_policy
}
*/

/*
  Lists the names of the roles/service accounts in the
  roles.tfvars.json

output "service_accounts" {
  value = var.roles[*]
}
*/

/*
  Lists the Kubernetes Service Account Name

output "kube_serv_acct" {
  value = kubernetes_service_account.k8s_service_acct
}
*/

/*
  Lists the Kubernetes Pod Name

output "kube_pod_name" {
  value = kubernetes_pod.k8s_service_pod
}
*/

/*
  Lists the location of the .kube config file

output "kube_config" {
  value = var.kube_config
}
*/

/*
  Lists the context we wish to use to identify
  access in the .kube config file.

output "kube_context" {
  value = var.kube_context
}
*/

/*
  Lists the name of the cluster we are trying
  to apply the following Service Account creation
  to.

output "cluster_name" {
  value = var.cluster_name
}
*/

/*
  Lists the AWS API Cluster Access Point so that
  we can use Terraform and Kubectl to manage the
  device and create our Pods/Service Accounts.

output "cluster_endpoint" {
  value = var.cluster_endpoint
}
*/

/*
  TLS based certificate utilized to authenticate with
  the AWS endpoint so that we can make our requests/changes

output "cluster_ca_cert" {
  value = var.cluster_ca_cert
}
*/